// <auto-generated />
using Gentoo.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gentoo.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    [Migration("20250830203743_CreateHistoricalData")]
    partial class CreateHistoricalData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Gentoo.Database.PreviousWinners", b =>
                {
                    b.Property<long>("MonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserRankings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MonthId");

                    b.ToTable("PreviousWinner");
                });

            modelBuilder.Entity("Gentoo.Database.User", b =>
                {
                    b.Property<ulong>("DiscordUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiscordUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GentooUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GithubUsername")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalCommits")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscordUserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
